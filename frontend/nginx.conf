events { }

http {

  map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }
  
  # redirect www -> non-www 

  server {
    server_name _;
    return 301 $scheme:https://ec2-54-227-29-224.compute-1.amazonaws.com$request_uri;
  }
  
  # redirect http -> https

  server {
    listen 80;
    server_name ec2-54-227-29-224.compute-1.amazonaws.com/;
    return 301 https://ec2-54-227-29-224.compute-1.amazonaws.com$request_uri;
  }

  # read the ssl certificate / key when listening on https
  
  #  server {
  #   listen 443 ssl;
  #   server_name localhost default_server;
    
  #   # ssl_certificate /etc/nginx/certs/fullchain.pem;
  #   # ssl_certificate_key /etc/nginx/certs/privkey.pem;
    
  #   access_log /var/log/nginx/data-access.log combined;

    # serve the static files 
    
    location / {
      root /usr/share/nginx/html;
      }

    # fetch data from proxied server when /api is called
    
    location /predict {
       proxy_pass https://ec2-54-227-29-224.compute-1.amazonaws.com/predict;
       proxy_set_header X-Real-IP  $remote_addr;
       proxy_set_header X-Forwarded-For $remote_addr;
       proxy_set_header Host $host;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_redirect https://ec2-54-227-29-224.compute-1.amazonaws.com/predict $scheme://$http_host/;
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection $connection_upgrade;
       proxy_read_timeout 20d;
       proxy_buffering off;
       }

   }
}